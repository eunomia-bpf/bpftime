name: Build and Test VM

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runs-on-container:
          - ubuntu:22.04
          - fedora:39
    container: 
      image: ${{matrix.runs-on-container}}
      options: --privileged
    steps:

    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: install deps (Ubuntu)
      if: startsWith(matrix.runs-on-container,'ubuntu')
      run: |
        apt-get update
        apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-arm-linux-gnueabi qemu-user python3.8 python3-pytest make cmake git pkg-config clang python3-venv
    - name: install deps (Fedora)
      if: startsWith(matrix.runs-on-container,'fedora')
      run: |
        dnf install -y gcc-aarch64-linux-gnu gcc-c++-aarch64-linux-gnu gcc-arm-linux-gnu qemu-user python3.8 python3-pytest make cmake git pkgconf clang python3-pip
  
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: build
      run: make build-vm

    - name: run tests x86
      run: |
        python3.8 -m venv vm/test
        source vm/test/bin/activate
        pip install -r vm/test/requirements.txt
        # make build # or build-arm32 build-arm64
        make -C vm test-vm -j
