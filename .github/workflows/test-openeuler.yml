name: CI (openEuler)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: build and test on openEuler (llvm_vm / ubpf_vm)
    runs-on: ubuntu-latest
    container:
      image: openeuler/openeuler:24.03-lts
      options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          set -e
          if command -v dnf >/dev/null 2>&1; then PM=dnf; else PM=yum; fi
          $PM -y update
          $PM -y install \
            git cmake make gcc gcc-c++ \
            python3 python3-pip \
            libstdc++-devel \
            ncurses-devel zlib-devel \
            elfutils-libelf-devel \
            binutils-devel \
            libcap-devel \
            flex bison \
            which file pkgconfig \
            tar xz \
            boost-devel \
            clang llvm llvm-devel
          python3 -m pip install --no-cache-dir ninja

      - name: Show toolchain versions
        run: |
          uname -a || true
          cmake --version
          gcc --version
          clang --version || true
          llvm-config --version || true

      - name: Configure (enable unit tests)
        run: |
          LLVM_CMAKE_DIR=$(llvm-config --cmakedir 2>/dev/null || true)
          if [ -n "$LLVM_CMAKE_DIR" ]; then
            cmake -B build -DBPFTIME_ENABLE_UNIT_TESTING=1 -DCMAKE_BUILD_TYPE=Debug -DLLVM_DIR="$LLVM_CMAKE_DIR"
          else
            cmake -B build -DBPFTIME_ENABLE_UNIT_TESTING=1 -DCMAKE_BUILD_TYPE=Debug
          fi

      - name: Build
        run: |
          cmake --build build -j

      - name: Run runtime tests with llvm_vm
        env:
          BPFTIME_VM_NAME: llvm
        run: |
          set -e
          make -C runtime/test/bpf
          cp runtime/test/bpf/*.bpf.o build/runtime/test/ || true
          ./build/runtime/unit-test/bpftime_runtime_tests

      - name: Run runtime tests with ubpf_vm
        env:
          BPFTIME_VM_NAME: ubpf
        run: |
          set -e
          ./build/runtime/unit-test/bpftime_runtime_tests


