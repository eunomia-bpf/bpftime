name: Build and run all integrated tests (examples)

on:
  push:
    branches: "*"
  pull_request: 
    branches: "*"

jobs: 
  build-runtime:
    strategy:
      matrix:
        enable_jit:
          - true
          - false
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: | 
          sudo apt-get update
          sudo apt-get install binutils-dev libboost1.74-all-dev libelf-dev zlib1g-dev libyaml-cpp-dev gcc-12 g++-12 llvm
      - name: Build and install runtime (with llvm-jit)
        if: ${{matrix.enable_jit}}
        run: |
          CC=gcc-12 CXX=g++-12 make release-with-llvm-jit -j
      - name: Build and install runtime (without llvm-jit)
        if: ${{!matrix.enable_jit}}
        run: |
          CC=gcc-12 CXX=g++-12 make release -j
      - name: Upload build results (without jit)
        uses: actions/upload-artifact@v3
        if: ${{!matrix.enable_jit}}
        with:
          name: runtime-package-no-jit
          path: |
            /home/runner/.bpftime
      - name: Upload build results (with jit)
        uses: actions/upload-artifact@v3
        if: ${{matrix.enable_jit}}
        with:
          name: runtime-package-jit
          path: |
            /home/runner/.bpftime
  build-and-test:
    runs-on: ubuntu-22.04
    needs: [build-runtime]
    strategy:
      fail-fast: true
      matrix:
        enable_jit:
          - true
          - false
        examples: 
          - path: libbpf-tools/opensnoop
            executable: ./opensnoop
            victim: ./victim
            syscall_trace: true
            expected_str: "   0 test.txt"
          - path: libbpf-tools/statsnoop
            executable: ./statsnoop
            victim: ./victim
            syscall_trace: true
            expected_str: "victim               0    0    /sys" 
          - path: malloc
            executable: ./malloc
            victim: ./victim
            syscall_trace: false
            expected_str: "malloc calls: "
          - path: minimal
            executable: ./uprobe
            victim: ./victim
            syscall_trace: false
            expected_str: ""
          - path: opensnoop
            executable: ./opensnoop
            victim: ./victim
            syscall_trace: true
            expected_str: "   0 test.txt"
          - path: sslsniff
            executable: ./sslsniff
            victim: /bin/wget https://www.google.com
            syscall_trace: false
            expected_str: "----- DATA -----"
          - path: libbpf-tools/bashreadline
            executable: ./readline
            victim: /bin/bash
            syscall_trace: false
            expected_str: "info"
          - path: libbpf-tools/syscount
            executable: ./syscount
            victim: /bin/bash
            syscall_trace: false
            expected_str: "info"
          - path: libbpf-tools/funclatency
            executable: ./funclatency -i 1 ./victim:plus
            victim: ./victim
            syscall_trace: false
            expected_str: ": 1"
          - path: libbpf-tools/mountsnoop
            executable: ./mountsnoop
            victim: ./victim
            syscall_trace: true
            expected_str:  mount(
          - path: libbpf-tools/sigsnoop
            executable: ./sigsnoop
            victim: ./victim
            syscall_trace: true
            expected_str: "victim           0         -1      0"
          - path: tailcall_minimal
            executable: ./tailcall_minimal
            victim: ./victim
            syscall_trace: false
            expected_str: "See /sys/kernel/debug/tracing/trace_pipe for output (15)"
          - path: usdt_minimal
            executable: ./usdt_minimal
            victim: ./victim
            syscall_trace: false
            expected_str: "bpf:"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download prebuilt runtime (with jit)
        if: ${{matrix.enable_jit}}
        uses: actions/download-artifact@v3
        with:
          name: runtime-package-jit
          path: /home/runner/.bpftime
      - name: Download prebuilt runtime (without jit)
        if: ${{!matrix.enable_jit}}
        uses: actions/download-artifact@v3
        with:
          name: runtime-package-no-jit
          path: /home/runner/.bpftime
  
      - name: Set permissions
        run: |
          chmod +x ~/.bpftime/*
      - name: Show downloaded artifacts
        run: |
          ls ~/.bpftime
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y zlib1g-dev libelf-dev llvm
          sudo mkdir /mnt/ramdisk
      - name: Build test assets
        run: |
          make -C example/${{matrix.examples.path}} -j
      - name: Test CLI - show help
        run: |
          export PATH=$PATH:~/.bpftime
          bpftime --help
      - name: Test CLI - attach by running (syscall_trace)
        if: matrix.examples.syscall_trace
        shell: "sudo /bin/bash -e {0}"
        run: |
          cd example/${{matrix.examples.path}}
          sudo -E python3 /home/runner/work/bpftime/bpftime/.github/script/run_example.py "${{matrix.examples.executable}}" "${{matrix.examples.victim}}" "${{matrix.examples.expected_str}}" "/home/runner/.bpftime/bpftime -i /home/runner/.bpftime" 1
      - name: Test CLI - attach by running (uprobe)
        if: '!matrix.examples.syscall_trace'
        shell: "sudo /bin/bash -e {0}"
        run: |
          cd example/${{matrix.examples.path}}
          sudo -E python3 /home/runner/work/bpftime/bpftime/.github/script/run_example.py "${{matrix.examples.executable}}" "${{matrix.examples.victim}}" '${{matrix.examples.expected_str}}' "/home/runner/.bpftime/bpftime -i /home/runner/.bpftime" 0
