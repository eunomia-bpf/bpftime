name: BPFtime Syscall Tracing Test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  syscall-tracing-test:
    runs-on: ubuntu-22.04
    container: 
      image: "manjusakalza/bpftime-base-image:ubuntu-2204"
      options: "--privileged"
    
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y lcov tree strace gdb
          
      - name: Build and install runtime
        run: |
          cmake -Bbuild  -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
            -DBPFTIME_LLVM_JIT=1 \
            -DBUILD_BPFTIME_DAEMON=1 \
            -DCMAKE_CXX_FLAGS="-DDEFAULT_LOGGER_OUTPUT_PATH='\"console\"'"
          cmake --build build --config RelWithDebInfo --target install -j
          
      - name: Check bpftime and bpftrace versions
        run: |
          export PATH=$PATH:~/.bpftime
          echo "Checking bpftime version:"
          ~/.bpftime/bpftime --version || echo "No version command available"
          echo "Checking bpftime help:"
          ~/.bpftime/bpftime --help
          echo "Checking bpftrace version:"
          bpftrace --version || echo "bpftrace version not available"
          
      - name: Check dependencies and library paths
        run: |
          echo "bpftime binary libraries:"
          ldd ~/.bpftime/bpftime || echo "ldd not working with bpftime"
          echo "bpftrace binary libraries:"
          ldd $(which bpftrace) || echo "ldd not working with bpftrace"
          
      - name: Check if bpftrace works directly
        run: |
          echo "Testing native bpftrace:"
          bpftrace -e 'BEGIN { printf("Hello World\n"); exit(); }' || echo "Native bpftrace test failed, error code: $?"
          
      - name: Run with debug output and backtrace
        run: |
          # 启用最详细的日志级别
          export SPDLOG_LEVEL=trace
          
          # 使用 gdb 捕获崩溃信息
          gdb -batch -ex "run" -ex "bt" -ex "quit" --args ~/.bpftime/bpftime load bpftrace -e 'BEGIN { printf("Hello World\n"); exit(); }' > gdb_trace.txt 2>&1 || echo "GDB debugging completed with code: $?"
          
          echo "=== GDB backtrace ==="
          cat gdb_trace.txt
          
      - name: Check for example bpftrace scripts
        run: |
          # 检查是否有示例脚本可以测试
          find . -name "*.bt" | grep -v "build" || echo "No .bt files found"
          
      - name: Try using simple example
        run: |
          # 尝试从仓库中加载一个简单的例子
          cd example
          ls -la
          echo "Checking for existing examples that might work:"
          find . -name "*.bt" | grep -v "build" || echo "No .bt files found in example"
          
      - name: Create and run basic example
        run: |
          # 创建一个最基本的测试
          echo 'BEGIN { printf("Hello from basic test\n"); exit(); }' > basic_test.bt
          cat basic_test.bt
          
          # 尝试直接用 bpftrace 运行
          echo "Running with native bpftrace:"
          bpftrace basic_test.bt || echo "Native bpftrace test failed"
          
          # 尝试用 bpftime 运行
          echo "Running with bpftime:"
          export SPDLOG_LEVEL=trace
          ~/.bpftime/bpftime load bpftrace basic_test.bt || echo "bpftime test failed with code: $?"
          
      - name: Check if project has specific tests for bpftrace
        run: |
          echo "Looking for existing tests:"
          find . -path "*test*" -type f | grep -E 'bpftrace|bpftime' || echo "No specific tests found"